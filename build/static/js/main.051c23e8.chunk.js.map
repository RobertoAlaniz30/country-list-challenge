{"version":3,"sources":["components/Header.jsx","store/StoreReducer.js","store/StoreProvider.js","pages/CountryPage.jsx","components/CardCountry.jsx","components/CountryList.jsx","components/Select.jsx","components/Input.jsx","pages/HomePage.jsx","pages/NotFoundPage.jsx","router/AppRouter.js","App.js","index.js"],"names":["Header","to","className","actionTypes","initialState","CountryList","filteredList","regionList","country","isLoad","darkMode","storeReducer","store","action","type","payload","list","length","filter","name","toLowerCase","includes","StoreContext","createContext","StoreProvider","children","useReducer","dispatch","Provider","value","CountryPage","id","useParams","useContext","console","log","useEffect","fetch","then","respone","json","data","window","scrollTo","top","behavior","src","flag","alt","nativeName","population","region","subregion","capital","topLevelDomain","currencies","map","item","languages","borders","CardCountry","props","loading","resone","fallback","alpha2Code","Select","onChange","event","listRegion","target","Input","useState","inputValue","setInputValue","SearchInput","useRef","reference","placeholder","HomePage","NotFoundPage","AppRouter","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.051c23e8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n  return (\n    <header>\n      <Link to=\"/\">\n        <div className=\"logo\">\n          <p>Where in the world?</p>\n        </div>\n      </Link>\n      <div className=\"dark-switch\">\n        <i className=\"far fa-moon\"></i>\n        <p>Dark mode</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","const actionTypes = {\n  FETCH_ALL_DATA: \"FETCH_ALL_DATA\",\n  FETCH_COUNTRY_DATA: \"FETCH_COUNTRY_DATA\",\n  FILTER_COUNTRY: 'FILTER_COUNTRY',\n  SEARCH_COUNTRY: 'SEARCH_COUNTRY'\n}\n\nconst initialState = {\n  CountryList: [],\n  filteredList: [],\n  regionList: [],\n  country: {},\n  isLoad: false,\n  darkMode: true,\n}\n\nconst storeReducer = (store, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ALL_DATA:\n      return {\n        ...store,\n        CountryList: action.payload,\n      }\n      case actionTypes.FETCH_COUNTRY_DATA:\n        return {\n          ...store,\n          country: action.payload\n        }\n      case actionTypes.SEARCH_COUNTRY:\n      let list\n        if(store.regionList.length > 0){\n          list = store.regionList.filter((country) => country.name.toLowerCase().includes(action.payload.toLowerCase()))\n        }else{\n          list = store.CountryList.filter((country) => country.name.toLowerCase().includes(action.payload.toLowerCase()))\n        }\n        return {\n          ...store,\n          filteredList: list\n        }\n        case actionTypes.FILTER_COUNTRY:\n          return {\n            ...store,\n            regionList: action.payload,\n            filteredList: action.payload\n          }\n    default:\n      return store\n  }\n}\n\nexport { initialState, actionTypes }\nexport default storeReducer\n","import { createContext, useReducer } from 'react'\nimport storeReducer, { initialState } from './StoreReducer'\n\nconst StoreContext = createContext()\n\nconst StoreProvider = ({ children }) => {\n  const [store, dispatch] = useReducer(storeReducer, initialState)\n\n  return (\n    <StoreContext.Provider value={[store, dispatch]}>\n      {children}\n    </StoreContext.Provider>\n  )\n}\n\nexport { StoreContext }\nexport default StoreProvider","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { StoreContext } from '../store/StoreProvider'\nimport { actionTypes } from '../store/StoreReducer'\nimport '../styles/CountryPage.css'\n\nconst CountryPage = () => {\n  const { id } = useParams()\n  const [store, dispatch] = useContext(StoreContext)\n  console.log(store)\n  useEffect(() => {\n    fetch(`https://restcountries.eu/rest/v2/alpha/${id}`)\n      .then((respone) => respone.json())\n      .then((data) => dispatch({\n        type: actionTypes.FETCH_COUNTRY_DATA,\n        payload: data\n      }))\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      })\n  }, [])\n  return (\n    <>\n      <div className=\"wrapper\">\n          <div className=\"back-button\">\n        <Link to='/'>\n            <p><i className=\"fas fa-long-arrow-alt-left\"></i> Back</p>\n        </Link>\n          </div>\n        <div className=\"info-container\">\n          <div className=\"country-img\">\n            <div className=\"country-info-image-container\">\n              <img className=\"country-info-image\" src={store.country.flag} alt={store.country.name} />\n            </div>\n          </div>\n          <div className=\"contry-info\">\n            <h3 className=\"country-name\">{store.country.name}</h3>\n            <p className=\"margin-bottom\">\n              <strong className=\"country-data-title\">Native Name: </strong>\n              {store.country.nativeName}\n            </p>\n            <p className=\"margin-bottom\">\n              <strong className=\"country-data-title\">Population: </strong>\n              {store.country.population}\n            </p>\n            <p className=\"margin-bottom\">\n              <strong className=\"country-data-title\">Region: </strong>\n              {store.country.region}\n            </p>\n            <p className=\"margin-bottom\">\n              <strong className=\"country-data-title\">Sub Region: </strong>\n              {store.country.subregion}\n            </p>\n            <p className=\"margin-bottom\">\n              <strong className=\"country-data-title\">Capital: </strong>\n              {store.country.capital}\n            </p>\n          </div>\n          <div className=\"sub-info\">\n            <p className=\"margin-bottom\">\n              <strong className=\"country-data-title\">Top Level Domain: </strong>\n              {store.country.topLevelDomain}\n            </p>\n            <p className=\"margin-bottom\">\n              <strong className=\"country-data-title\">Currencies: </strong>\n              {store.country.currencies && store.country.currencies.map((item) => \n                <span key={item.name}>{item.name}</span>)}\n            </p>\n            <p className=\"margin-bottom\">\n              <strong className=\"country-data-title\">Languages: </strong>\n              {store.country.languages && store.country.languages.map((item) => \n                <span key={item.name}>{item.name} </span>)}\n            </p>\n          </div>\n\n        </div>\n          <div className=\"country-info-border\">\n            <h3 className=\"margin-bottom\">Border Countries:</h3>\n            <div className=\"flex\">\n              {store.country.borders && store.country.borders.map((item) => \n                <div key={item} className=\"back-button\">\n                  <p>{item}</p>\n              </div>)}\n            </div>\n          </div>\n      </div>\n    </>\n  )\n}\n\nexport default CountryPage\n","import React from \"react\"\nimport \"../styles/CardCountry.css\"\n\nfunction CardCountry(props) {\n  return (\n    <div className=\"card-country\">\n      <div className=\"country-image-container\">\n        <img src={props.flag} alt=\"\" loading=\"lazy\" className=\"country-image\" />\n      </div>\n      <div className=\"data-country\">\n        <h4 className=\"country-title\">{props.name}</h4>\n        <p>\n          <strong className=\"country-data-title\">Population: </strong>\n          {props.population}\n        </p>\n        <p>\n          <strong className=\"country-data-title\">Region: </strong>\n          {props.region}\n        </p>\n        <p>\n          <strong className=\"country-data-title\">Capital: </strong>\n          {props.capital}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default CardCountry\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, Suspense } from \"react\"\nimport CardCountry from \"./CardCountry\"\nimport { actionTypes } from \"../store/StoreReducer\"\nimport { StoreContext } from \"../store/StoreProvider\"\nimport { Link } from \"react-router-dom\"\nimport \"../styles/CountryList.css\"\n\nfunction CountryList() {\n  const [store, dispatch] = useContext(StoreContext)\n  const { CountryList, filteredList } = store\n\n  const API = \"https://restcountries.eu/rest/v2/all\"\n  useEffect(() => {\n    fetch(API)\n      .then((resone) => resone.json())\n      .then((data) =>\n        dispatch({\n          type: actionTypes.FETCH_ALL_DATA,\n          payload: data,\n        })\n      )\n  }, [])\n\n  let list\n\n  if(filteredList.length > 0) {\n    list = filteredList\n  }else {\n    list = CountryList\n  }\n\n  return (\n    <Suspense fallback={<p>Loading...</p>}>\n    <div className=\"country-list-container\">\n      {list.map((item) => (\n        <Link key={item.name} to={`/country/${item.alpha2Code.toLowerCase()}`}>\n          <CardCountry {...item} />\n        </Link>\n      ))}\n    </div>\n      </Suspense>\n  )\n}\n\nexport default CountryList\n","import React, { useContext } from \"react\"\nimport { StoreContext } from \"../store/StoreProvider\"\nimport { actionTypes } from \"../store/StoreReducer\"\nimport \"../styles/select.css\"\n\nconst Select = () => {\n\n  const [, dispatch] = useContext(StoreContext)\n\n  const handleSelect = (event) => {\n    let listRegion\n    if(event.target.value === ''){\n      listRegion = 'https://restcountries.eu/rest/v2/all'\n    }else{\n      listRegion = `https://restcountries.eu/rest/v2/region/${event.target.value}`\n    }\n    fetch(listRegion)\n      .then((respone) => respone.json())\n      .then((data) => \n        dispatch({\n          type: actionTypes.FILTER_COUNTRY,\n          payload: data \n        })\n      )\n  }\n\n  return (\n    <select onChange={handleSelect} className=\"select\">\n      <option className=\"option\" value=\"\">\n        Filter By Region\n      </option>\n      <option className=\"option\" value=\"africa\">\n        Africa\n      </option>\n      <option className=\"option\" value=\"americas\">\n        Americas\n      </option>\n      <option className=\"option\" value=\"asia\">\n        Asia\n      </option>\n      <option className=\"option\" value=\"europe\">\n        Europe\n      </option>\n      <option className=\"option\" value=\"oceania\">\n        Oceania\n      </option>\n    </select>\n  )\n}\n\nexport default Select\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { StoreContext } from \"../store/StoreProvider\";\nimport { actionTypes } from \"../store/StoreReducer\";\nimport \"../styles/InputComponent.css\";\nimport Select from \"./Select\";\nfunction Input() {\n  const [, dispatch] = useContext(StoreContext)\n  const [inputValue, setInputValue] = useState('')\n  const SearchInput = useRef(null)\n  \n  useEffect(() => {\n    dispatch({\n      type: actionTypes.SEARCH_COUNTRY,\n      payload: inputValue, \n    })\n  }, [inputValue])\n  \n  return (\n    <div className=\"inputContainer\">\n      <div className=\"inputStuffContainer\">\n        <button>\n          <i className=\"fas fa-search\"></i>\n        </button>\n        <input\n          type=\"text\"\n          reference={SearchInput}\n          placeholder={\"Search your country\"}\n          onChange={(event) =>  setInputValue(event.target.value)}\n          value={inputValue}\n        />\n      </div>\n      <Select />\n    </div>\n  );\n}\n\nexport default Input;\n","import React from 'react'\nimport CountryList from \"../components/CountryList\";\nimport Input from \"../components/Input\";\n\nconst HomePage = () => {\n  return (\n    <div>\n      <Input />\n      <CountryList />\n    </div>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\n\nconst NotFoundPage = () => {\n  return (\n    <div>\n      <h1>Are you lost?</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Header from '../components/Header'\nimport CountryPage from '../pages/CountryPage'\nimport HomePage from '../pages/HomePage'\nimport NotFoundPage from '../pages/NotFoundPage'\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path='/country/:id' component={CountryPage} />\n        <Route exact path='/' component={HomePage} />\n        <Route path='*' component={NotFoundPage} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter\n","import AppRouter from \"./router/AppRouter\";\nfunction App() {\n  return (\n    <>\n      <AppRouter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport StoreProvider from './store/StoreProvider';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}