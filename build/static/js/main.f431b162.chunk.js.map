{"version":3,"sources":["store/StoreReducer.js","store/StoreProvider.js","components/Header.jsx","pages/CountryPage.jsx","components/CardCountry.jsx","components/CountryList.jsx","components/Select.jsx","components/Input.jsx","pages/HomePage.jsx","pages/NotFoundPage.jsx","router/AppRouter.js","App.js","index.js"],"names":["actionTypes","initialState","CountryList","filteredList","regionList","country","isLoad","darkMode","storeReducer","store","action","type","payload","list","length","filter","name","toLowerCase","includes","StoreContext","createContext","StoreProvider","children","useReducer","dispatch","Provider","value","Header","useContext","to","className","onClick","CountryPage","id","useParams","console","log","useEffect","fetch","then","respone","json","data","window","scrollTo","top","behavior","src","flag","alt","nativeName","population","region","subregion","capital","topLevelDomain","currencies","symbol","languages","map","lenguaje","iso639_1","borders","CardCountry","props","loading","resone","fallback","item","alpha2Code","Select","useState","filterActive","setFilterActive","listRegion","handleSelect","Input","inputValue","setInputValue","SearchInput","useRef","reference","placeholder","onChange","event","target","HomePage","NotFoundPage","AppRouter","mainClass","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f431b162.chunk.js","sourcesContent":["const actionTypes = {\n  FETCH_ALL_DATA: \"FETCH_ALL_DATA\",\n  FETCH_COUNTRY_DATA: \"FETCH_COUNTRY_DATA\",\n  FILTER_COUNTRY: 'FILTER_COUNTRY',\n  SEARCH_COUNTRY: 'SEARCH_COUNTRY',\n  CHANGE_DARK_MODE: 'CHANGE_DARK_MODE',\n  SET_LOAD: 'SET_LOAD',\n}\n\nconst initialState = {\n  CountryList: [],\n  filteredList: [],\n  regionList: [],\n  country: {},\n  isLoad: false,\n  darkMode: true,\n}\n\nconst storeReducer = (store, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ALL_DATA:\n      return {\n        ...store,\n        CountryList: action.payload,\n      }\n      case actionTypes.FETCH_COUNTRY_DATA:\n        return {\n          ...store,\n          country: action.payload\n        }\n      case actionTypes.SEARCH_COUNTRY:\n      let list\n        if(store.regionList.length > 0){\n          list = store.regionList.filter((country) => country.name.toLowerCase().includes(action.payload.toLowerCase()))\n        }else{\n          list = store.CountryList.filter((country) => country.name.toLowerCase().includes(action.payload.toLowerCase()))\n        }\n        return {\n          ...store,\n          filteredList: list\n        }\n        case actionTypes.FILTER_COUNTRY:\n          return {\n            ...store,\n            regionList: action.payload,\n            filteredList: action.payload\n          }\n        case actionTypes.CHANGE_DARK_MODE:\n          return {\n            ...store,\n            darkMode: !store.darkMode\n          }\n        case actionTypes.SET_LOAD:\n          return {\n            ...store,\n            isLoad: true,\n          }\n    default:\n      return store\n  }\n}\n\nexport { initialState, actionTypes }\nexport default storeReducer\n","import { createContext, useReducer } from 'react'\nimport storeReducer, { initialState } from './StoreReducer'\n\nconst StoreContext = createContext()\n\nconst StoreProvider = ({ children }) => {\n  const [store, dispatch] = useReducer(storeReducer, initialState)\n\n  return (\n    <StoreContext.Provider value={[store, dispatch]}>\n      {children}\n    </StoreContext.Provider>\n  )\n}\n\nexport { StoreContext }\nexport default StoreProvider","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StoreContext } from \"../store/StoreProvider\";\nimport { actionTypes } from \"../store/StoreReducer\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n  const [store, dispatch] = useContext(StoreContext)\n\n  const handleChangeDarkMode = () => {\n    dispatch({\n      type: actionTypes.CHANGE_DARK_MODE,\n    })\n  }\n\n  return (\n    <header>\n      <Link to=\"/\">\n        <div className=\"logo\">\n          <p>Where in the world?</p>\n        </div>\n      </Link>\n      <div className=\"dark-switch\" onClick={handleChangeDarkMode}>\n        <i className={ store.darkMode ? 'far fa-sun' : 'far fa-moon'}></i>\n        <p>Dark mode</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { StoreContext } from '../store/StoreProvider'\nimport { actionTypes } from '../store/StoreReducer'\nimport '../styles/CountryPage.css'\n\nconst CountryPage = () => {\n  const { id } = useParams()\n  const [store, dispatch] = useContext(StoreContext)\n  console.log(store)\n  useEffect(() => {\n    fetch(`https://restcountries.eu/rest/v2/alpha/${id}`)\n      .then((respone) => respone.json())\n      .then((data) => dispatch({\n        type: actionTypes.FETCH_COUNTRY_DATA,\n        payload: data\n      }))\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      })\n  }, [])\n  return (\n    <>\n      <div className=\"wrapper\">\n          <div className=\"back-button\">\n        <Link to='/'>\n            <p><i className=\"fas fa-long-arrow-alt-left\"></i> Back</p>\n        </Link>\n          </div>\n          <div className=\"country-info\">\n            <div className=\"country-info-image-container half-margin bottom\">\n              <img className='country-info-image'\n              src={store.country.flag} alt={`${store.country.flag} flag`} />\n            </div>\n\n            <div className=\"country-info-text\">\n              <h3 className='half-margin-bottom country-info-name'>{store.country.name}</h3>\n              <div className=\"country-content\">\n                <div className=\"country-info-text-left\">\n                  <p className='half-margin-bottom'><strong>Native Name: </strong>{store.country.nativeName}</p>\n                  <p className='half-margin-bottom'><strong>Population: </strong>{store.country.population}</p>\n                  <p className='half-margin-bottom'><strong>Region: </strong>{store.country.region}</p>\n                  <p className='half-margin-bottom'><strong>Sub Region: </strong>{store.country.subregion}</p>\n                  <p className='half-margin-bottom'><strong>Capital: </strong>{store.country.capital}</p>\n                </div>\n                <div className=\"country-info-text-right\">\n                  <p className='half-margin-bottom'><strong>Top Level Domain: </strong>\n                  {store.country.topLevelDomain && store.country.topLevelDomain[0]}</p>\n                  <p className='half-margin-bottom'><strong>Currencies: </strong>\n                  {store.country.currencies && `${store.country.currencies[0].name} ${store.country.currencies[0].symbol}`}</p>\n                  <p className='half-margin-bottom sub-info'><strong>Languages: </strong>\n                  {store.country.languages && store.country.languages.map((lenguaje) => <span key={lenguaje.iso639_1}>{lenguaje.name} </span>)}</p>\n                </div>\n              </div>\n              <div className=\"country-info-border\">\n              <h4 className='borders-title'>Border Contries:</h4>\n                <div className=\"borders\">\n                  {store.country.borders && store.country.borders.length > 0\n                    ? store.country.borders.map((country) => <p key={country} className='back-button country-border'>{country}</p>)\n                    : <p>This country does not have border with other country :c</p>\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </>\n  )\n}\n\nexport default CountryPage\n","import React from \"react\"\nimport \"../styles/CardCountry.css\"\n\nfunction CardCountry(props) {\n  return (\n    <div className=\"card-country\">\n      <div className=\"country-image-container\">\n        <img src={props.flag} alt=\"\" loading=\"lazy\" className=\"country-image\" />\n      </div>\n      <div className=\"data-country\">\n        <h4 className=\"country-title\">{props.name}</h4>\n        <p>\n          <strong className=\"country-data-title\">Population: </strong>\n          {props.population}\n        </p>\n        <p>\n          <strong className=\"country-data-title\">Region: </strong>\n          {props.region}\n        </p>\n        <p>\n          <strong className=\"country-data-title\">Capital: </strong>\n          {props.capital}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default CardCountry\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, Suspense } from \"react\"\nimport CardCountry from \"./CardCountry\"\nimport { actionTypes } from \"../store/StoreReducer\"\nimport { StoreContext } from \"../store/StoreProvider\"\nimport { Link } from \"react-router-dom\"\nimport \"../styles/CountryList.css\"\n\nfunction CountryList() {\n  const [store, dispatch] = useContext(StoreContext)\n  const { CountryList, filteredList } = store\n\n  const API = \"https://restcountries.eu/rest/v2/all\"\n  useEffect(() => {\n    fetch(API)\n      .then((resone) => resone.json())\n      .then((data) => {\n        dispatch({\n          type: actionTypes.FETCH_ALL_DATA,\n          payload: data,\n        })\n        list = data\n      }\n        )\n        dispatch({\n          type: actionTypes.SET_LOAD\n        })\n  }, [])\n\n  let list\n\n  if(filteredList.length > 0) {\n    list = filteredList\n  }else {\n    list = CountryList\n  }\n\n  return (\n    <Suspense fallback={<p>Loading...</p>}>\n    <div className=\"country-list-container\">\n      {list.map((item) => (\n        <Link key={item.name} to={`/country/${item.alpha2Code.toLowerCase()}`}>\n          <CardCountry {...item} />\n        </Link>\n      ))\n      }\n    </div>\n      </Suspense>\n  )\n}\n\nexport default CountryList\n","import React, { useContext, useState } from \"react\"\nimport { StoreContext } from \"../store/StoreProvider\"\nimport { actionTypes } from \"../store/StoreReducer\"\nimport \"../styles/select.css\"\n\nconst Select = () => {\n\n  const [, dispatch] = useContext(StoreContext)\n  const regions = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania']\n  const [filterActive, setFilterActive] = useState(false)\n\n  const handleSelect = (region) => {\n    let listRegion\n    if(region.toLowerCase() === ''){\n      listRegion = 'https://restcountries.eu/rest/v2/all'\n    }else{\n      listRegion = `https://restcountries.eu/rest/v2/region/${region.toLowerCase()}`\n    }\n    fetch(listRegion)\n      .then((respone) => respone.json())\n      .then((data) => \n        dispatch({\n          type: actionTypes.FILTER_COUNTRY,\n          payload: data \n        })\n      )\n  }\n\n\n  return (\n    <div className=\"select-region\">\n      <p onClick={() => setFilterActive(!filterActive)} className='select-title'>Filter By Region <i className=\"fas fa-angle-down\"></i></p>\n      {filterActive && \n        <div className=\"options\">\n          {regions.map((region) => (\n            <p\n            className='option half-margin-bottom'\n            key={region}\n            onClick={() => handleSelect(region)}\n            >\n              {region}\n            </p>\n          ))}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Select\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { StoreContext } from \"../store/StoreProvider\";\nimport { actionTypes } from \"../store/StoreReducer\";\nimport \"../styles/InputComponent.css\";\nimport Select from \"./Select\";\nfunction Input() {\n  const [, dispatch] = useContext(StoreContext)\n  const [inputValue, setInputValue] = useState('')\n  const SearchInput = useRef(null)\n  \n  useEffect(() => {\n    dispatch({\n      type: actionTypes.SEARCH_COUNTRY,\n      payload: inputValue, \n    })\n  }, [inputValue])\n  \n  return (\n    <div className=\"inputContainer\">\n      <div className=\"inputStuffContainer\">\n        <button>\n          <i className=\"fas fa-search\"></i>\n        </button>\n        <input\n          type=\"text\"\n          reference={SearchInput}\n          placeholder={\"Search your country\"}\n          onChange={(event) =>  setInputValue(event.target.value)}\n          value={inputValue}\n        />\n      </div>\n      <Select />\n    </div>\n  );\n}\n\nexport default Input;\n","import React, { useContext } from 'react'\nimport CountryList from \"../components/CountryList\";\nimport Input from \"../components/Input\";\nimport { StoreContext } from '../store/StoreProvider';\nimport '../styles/Home.css'\n\nconst HomePage = () => {\n    const [store] = useContext(StoreContext)\n    console.log(store.isLoad)\n  return (\n    <div className=\"home\">\n      <>\n        <Input />\n        <CountryList />\n      </>\n    </div>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\n\nconst NotFoundPage = () => {\n  return (\n    <div>\n      <h1>Are you lost?</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n","import { useContext } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Header from '../components/Header'\nimport CountryPage from '../pages/CountryPage'\nimport HomePage from '../pages/HomePage'\nimport NotFoundPage from '../pages/NotFoundPage'\nimport { StoreContext } from '../store/StoreProvider'\n\nconst AppRouter = () => {\n  const [store] = useContext(StoreContext)\n  const mainClass = store.darkMode ? 'is-dark-mode' : 'is-light-mode'\n  return (\n    <main className={mainClass}>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/country/:id' component={CountryPage} />\n          <Route exact path='/' component={HomePage} />\n          <Route path='*' component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </main>\n  )\n}\n\nexport default AppRouter\n","import AppRouter from \"./router/AppRouter\";\nfunction App() {\n  return (\n    <>\n      <AppRouter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport StoreProvider from './store/StoreProvider';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}